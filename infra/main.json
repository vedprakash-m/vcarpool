{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.36.1.42791",
      "templateHash": "966771239891842869"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "appName": {
      "type": "string",
      "defaultValue": "carpool",
      "metadata": {
        "description": "App name that will be used as prefix for all resources"
      }
    },
    "environmentName": {
      "type": "string",
      "defaultValue": "dev",
      "allowedValues": [
        "dev",
        "test",
        "prod"
      ],
      "metadata": {
        "description": "Environment name (dev, test, prod)"
      }
    },
    "cosmosDbAccountName": {
      "type": "string",
      "defaultValue": "[format('{0}-cosmos-{1}', parameters('appName'), parameters('environmentName'))]",
      "metadata": {
        "description": "Azure Cosmos DB account name"
      }
    },
    "functionAppName": {
      "type": "string",
      "defaultValue": "[format('{0}-api-{1}', parameters('appName'), parameters('environmentName'))]",
      "metadata": {
        "description": "Azure Function App name"
      }
    },
    "staticWebAppName": {
      "type": "string",
      "defaultValue": "[format('{0}-web-{1}', parameters('appName'), parameters('environmentName'))]",
      "metadata": {
        "description": "Azure Static Web App name"
      }
    },
    "appInsightsName": {
      "type": "string",
      "defaultValue": "[format('{0}-insights-{1}', parameters('appName'), parameters('environmentName'))]",
      "metadata": {
        "description": "Azure Application Insights name"
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[format('{0}sa{1}', replace(parameters('appName'), '-', ''), parameters('environmentName'))]",
      "metadata": {
        "description": "Azure Storage Account name"
      }
    },
    "databaseResourceGroup": {
      "type": "string",
      "defaultValue": "[format('{0}-db-rg', parameters('appName'))]",
      "metadata": {
        "description": "Database resource group name (for cross-RG references)"
      }
    }
  },
  "variables": {
    "tags": {
      "application": "[parameters('appName')]",
      "environment": "[parameters('environmentName')]",
      "createdBy": "Bicep"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[parameters('appInsightsName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-logs-{1}', parameters('appName'), parameters('environmentName')))]",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-logs-{1}', parameters('appName'), parameters('environmentName')))]"
      ]
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2021-06-01",
      "name": "[format('{0}-logs-{1}', parameters('appName'), parameters('environmentName'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30,
        "features": {
          "enableLogAccessUsingOnlyResourcePermissions": true
        }
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-03-01",
      "name": "[format('{0}-plan-{1}', parameters('appName'), parameters('environmentName'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "B1",
        "tier": "Basic"
      },
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-03-01",
      "name": "[parameters('functionAppName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "kind": "functionapp",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('{0}-plan-{1}', parameters('appName'), parameters('environmentName')))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('storageAccountName'), environment().suffixes.storage, listKeys(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('databaseResourceGroup')), 'Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2021-08-01').keys[0].value)]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "node"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "~22"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            },
            {
              "name": "COSMOS_DB_ENDPOINT",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('databaseResourceGroup')), 'Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName')), '2021-10-15').documentEndpoint]"
            },
            {
              "name": "COSMOS_DB_KEY",
              "value": "[listKeys(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('databaseResourceGroup')), 'Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName')), '2021-10-15').primaryMasterKey]"
            },
            {
              "name": "COSMOS_DB_DATABASE_ID",
              "value": "carpool"
            },
            {
              "name": "JWT_SECRET",
              "value": "[format('prod-jwt-secret-{0}', uniqueString(resourceGroup().id))]"
            },
            {
              "name": "JWT_REFRESH_SECRET",
              "value": "[format('prod-refresh-secret-{0}', uniqueString(resourceGroup().id))]"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02').InstrumentationKey]"
            },
            {
              "name": "APPINSIGHTS_CONNECTION_STRING",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02').ConnectionString]"
            }
          ],
          "cors": {
            "allowedOrigins": [
              "[format('https://{0}.azurestaticapps.net', parameters('staticWebAppName'))]",
              "http://localhost:3000"
            ],
            "supportCredentials": true
          },
          "ftpsState": "Disabled",
          "minTlsVersion": "1.2",
          "nodeVersion": "~22"
        },
        "httpsOnly": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', parameters('appInsightsName'))]",
        "[resourceId('Microsoft.Web/serverfarms', format('{0}-plan-{1}', parameters('appName'), parameters('environmentName')))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2021-11-01-preview",
      "name": "[format('{0}-kv-{1}', parameters('appName'), parameters('environmentName'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [],
        "enabledForTemplateDeployment": true,
        "enableRbacAuthorization": false,
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 7,
        "enablePurgeProtection": false
      }
    },
    {
      "type": "Microsoft.Web/staticSites",
      "apiVersion": "2021-03-01",
      "name": "[parameters('staticWebAppName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "Standard",
        "tier": "Standard"
      },
      "properties": {
        "provider": "GitHub",
        "stagingEnvironmentPolicy": "Enabled",
        "allowConfigFileUpdates": true
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "cosmosContainers",
      "resourceGroup": "[parameters('databaseResourceGroup')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "cosmosDbAccountName": {
            "value": "[parameters('cosmosDbAccountName')]"
          },
          "throughput": {
            "value": 400
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "5139917610498862852"
            }
          },
          "parameters": {
            "cosmosDbAccountName": {
              "type": "string",
              "metadata": {
                "description": "Cosmos DB database and containers module - Creates the Cosmos DB database and all containers in an existing Cosmos account"
              }
            },
            "throughput": {
              "type": "int",
              "defaultValue": 400
            }
          },
          "resources": [
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
              "apiVersion": "2021-10-15",
              "name": "[format('{0}/{1}', parameters('cosmosDbAccountName'), 'carpool')]",
              "properties": {
                "resource": {
                  "id": "carpool"
                },
                "options": {
                  "throughput": "[parameters('throughput')]"
                }
              }
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
              "apiVersion": "2021-10-15",
              "name": "[format('{0}/{1}/{2}', parameters('cosmosDbAccountName'), 'carpool', 'users')]",
              "properties": {
                "resource": {
                  "id": "users",
                  "partitionKey": {
                    "paths": [
                      "/id"
                    ],
                    "kind": "Hash"
                  },
                  "indexingPolicy": {
                    "indexingMode": "consistent",
                    "automatic": true,
                    "includedPaths": [
                      {
                        "path": "/*"
                      }
                    ],
                    "excludedPaths": [
                      {
                        "path": "/\"_etag\"/?"
                      }
                    ]
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('cosmosDbAccountName'), 'carpool')]"
              ]
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
              "apiVersion": "2021-10-15",
              "name": "[format('{0}/{1}/{2}', parameters('cosmosDbAccountName'), 'carpool', 'trips')]",
              "properties": {
                "resource": {
                  "id": "trips",
                  "partitionKey": {
                    "paths": [
                      "/driverId"
                    ],
                    "kind": "Hash"
                  },
                  "indexingPolicy": {
                    "indexingMode": "consistent",
                    "automatic": true,
                    "includedPaths": [
                      {
                        "path": "/*"
                      }
                    ],
                    "excludedPaths": [
                      {
                        "path": "/\"_etag\"/?"
                      }
                    ]
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('cosmosDbAccountName'), 'carpool')]"
              ]
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
              "apiVersion": "2021-10-15",
              "name": "[format('{0}/{1}/{2}', parameters('cosmosDbAccountName'), 'carpool', 'schedules')]",
              "properties": {
                "resource": {
                  "id": "schedules",
                  "partitionKey": {
                    "paths": [
                      "/userId"
                    ],
                    "kind": "Hash"
                  },
                  "indexingPolicy": {
                    "indexingMode": "consistent",
                    "automatic": true,
                    "includedPaths": [
                      {
                        "path": "/*"
                      }
                    ],
                    "excludedPaths": [
                      {
                        "path": "/\"_etag\"/?"
                      }
                    ]
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('cosmosDbAccountName'), 'carpool')]"
              ]
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
              "apiVersion": "2021-10-15",
              "name": "[format('{0}/{1}/{2}', parameters('cosmosDbAccountName'), 'carpool', 'swapRequests')]",
              "properties": {
                "resource": {
                  "id": "swapRequests",
                  "partitionKey": {
                    "paths": [
                      "/requesterId"
                    ],
                    "kind": "Hash"
                  },
                  "indexingPolicy": {
                    "indexingMode": "consistent",
                    "automatic": true,
                    "includedPaths": [
                      {
                        "path": "/*"
                      }
                    ],
                    "excludedPaths": [
                      {
                        "path": "/\"_etag\"/?"
                      }
                    ]
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('cosmosDbAccountName'), 'carpool')]"
              ]
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
              "apiVersion": "2021-10-15",
              "name": "[format('{0}/{1}/{2}', parameters('cosmosDbAccountName'), 'carpool', 'notifications')]",
              "properties": {
                "resource": {
                  "id": "notifications",
                  "partitionKey": {
                    "paths": [
                      "/id"
                    ],
                    "kind": "Hash"
                  },
                  "indexingPolicy": {
                    "indexingMode": "consistent",
                    "automatic": true,
                    "includedPaths": [
                      {
                        "path": "/*"
                      }
                    ],
                    "excludedPaths": [
                      {
                        "path": "/\"_etag\"/?"
                      }
                    ]
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('cosmosDbAccountName'), 'carpool')]"
              ]
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
              "apiVersion": "2021-10-15",
              "name": "[format('{0}/{1}/{2}', parameters('cosmosDbAccountName'), 'carpool', 'messages')]",
              "properties": {
                "resource": {
                  "id": "messages",
                  "partitionKey": {
                    "paths": [
                      "/id"
                    ],
                    "kind": "Hash"
                  },
                  "indexingPolicy": {
                    "indexingMode": "consistent",
                    "automatic": true,
                    "includedPaths": [
                      {
                        "path": "/*"
                      }
                    ],
                    "excludedPaths": [
                      {
                        "path": "/\"_etag\"/?"
                      }
                    ]
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('cosmosDbAccountName'), 'carpool')]"
              ]
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
              "apiVersion": "2021-10-15",
              "name": "[format('{0}/{1}/{2}', parameters('cosmosDbAccountName'), 'carpool', 'chats')]",
              "properties": {
                "resource": {
                  "id": "chats",
                  "partitionKey": {
                    "paths": [
                      "/id"
                    ],
                    "kind": "Hash"
                  },
                  "indexingPolicy": {
                    "indexingMode": "consistent",
                    "automatic": true,
                    "includedPaths": [
                      {
                        "path": "/*"
                      }
                    ],
                    "excludedPaths": [
                      {
                        "path": "/\"_etag\"/?"
                      }
                    ]
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('cosmosDbAccountName'), 'carpool')]"
              ]
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
              "apiVersion": "2021-10-15",
              "name": "[format('{0}/{1}/{2}', parameters('cosmosDbAccountName'), 'carpool', 'chatParticipants')]",
              "properties": {
                "resource": {
                  "id": "chatParticipants",
                  "partitionKey": {
                    "paths": [
                      "/id"
                    ],
                    "kind": "Hash"
                  },
                  "indexingPolicy": {
                    "indexingMode": "consistent",
                    "automatic": true,
                    "includedPaths": [
                      {
                        "path": "/*"
                      }
                    ],
                    "excludedPaths": [
                      {
                        "path": "/\"_etag\"/?"
                      }
                    ]
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('cosmosDbAccountName'), 'carpool')]"
              ]
            }
          ],
          "outputs": {
            "cosmosDbName": {
              "type": "string",
              "value": "carpool"
            },
            "containerNames": {
              "type": "array",
              "value": [
                "users",
                "trips",
                "schedules",
                "swapRequests",
                "notifications",
                "messages",
                "chats",
                "chatParticipants"
              ]
            }
          }
        }
      }
    }
  ],
  "outputs": {
    "keyVaultName": {
      "type": "string",
      "value": "[format('{0}-kv-{1}', parameters('appName'), parameters('environmentName'))]"
    },
    "functionAppEndpoint": {
      "type": "string",
      "value": "[format('https://{0}/api', reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2021-03-01').defaultHostName)]"
    },
    "staticWebAppEndpoint": {
      "type": "string",
      "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/staticSites', parameters('staticWebAppName')), '2021-03-01').defaultHostname)]"
    },
    "cosmosDbEndpoint": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('databaseResourceGroup')), 'Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName')), '2021-10-15').documentEndpoint]"
    },
    "functionAppName": {
      "type": "string",
      "value": "[parameters('functionAppName')]"
    },
    "staticWebAppName": {
      "type": "string",
      "value": "[parameters('staticWebAppName')]"
    }
  }
}