{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.36.1.42791",
      "templateHash": "7785943710435978667"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "appName": {
      "type": "string",
      "defaultValue": "carpool",
      "metadata": {
        "description": "App name that will be used as prefix for all resources"
      }
    },
    "environmentName": {
      "type": "string",
      "defaultValue": "dev",
      "allowedValues": [
        "dev",
        "test",
        "prod"
      ],
      "metadata": {
        "description": "Environment name (dev, test, prod)"
      }
    },
    "functionAppName": {
      "type": "string",
      "defaultValue": "[format('{0}-api-{1}', parameters('appName'), parameters('environmentName'))]",
      "metadata": {
        "description": "Azure Function App name"
      }
    },
    "staticWebAppName": {
      "type": "string",
      "defaultValue": "[format('{0}-web-{1}', parameters('appName'), parameters('environmentName'))]",
      "metadata": {
        "description": "Azure Static Web App name"
      }
    },
    "appInsightsName": {
      "type": "string",
      "defaultValue": "[format('{0}-insights-{1}', parameters('appName'), parameters('environmentName'))]",
      "metadata": {
        "description": "Azure Application Insights name"
      }
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "[format('{0}-kv-{1}', parameters('appName'), parameters('environmentName'))]",
      "metadata": {
        "description": "Azure Key Vault name"
      }
    },
    "databaseResourceGroup": {
      "type": "string",
      "defaultValue": "[format('{0}-db-rg', parameters('appName'))]",
      "metadata": {
        "description": "Database resource group name"
      }
    },
    "cosmosDbAccountName": {
      "type": "string",
      "defaultValue": "[format('{0}-cosmos-{1}', parameters('appName'), parameters('environmentName'))]",
      "metadata": {
        "description": "Cosmos DB account name from database resource group"
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[format('{0}sa{1}', replace(parameters('appName'), '-', ''), parameters('environmentName'))]",
      "metadata": {
        "description": "Storage Account name from database resource group"
      }
    }
  },
  "variables": {
    "tags": {
      "application": "[parameters('appName')]",
      "environment": "[parameters('environmentName')]",
      "createdBy": "Bicep",
      "resourceType": "compute"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-03-01",
      "name": "EastUSPlan",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "properties": {}
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[parameters('appInsightsName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Request_Source": "rest"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-03-01",
      "name": "[parameters('functionAppName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "kind": "functionapp",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', 'EastUSPlan')]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('storageAccountName'), environment().suffixes.storage, listKeys(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('databaseResourceGroup')), 'Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2021-08-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('storageAccountName'), environment().suffixes.storage, listKeys(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('databaseResourceGroup')), 'Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2021-08-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(parameters('functionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "~20"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "node"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02').InstrumentationKey]"
            },
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02').ConnectionString]"
            },
            {
              "name": "COSMOS_DB_CONNECTION_STRING",
              "value": "[listConnectionStrings(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('databaseResourceGroup')), 'Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName')), '2021-10-15').connectionStrings[0].connectionString]"
            },
            {
              "name": "COSMOS_DB_ENDPOINT",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('databaseResourceGroup')), 'Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName')), '2021-10-15').documentEndpoint]"
            },
            {
              "name": "COSMOS_DB_KEY",
              "value": "[listKeys(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('databaseResourceGroup')), 'Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName')), '2021-10-15').primaryMasterKey]"
            },
            {
              "name": "ENVIRONMENT",
              "value": "[parameters('environmentName')]"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            }
          ],
          "ftpsState": "FtpsOnly",
          "minTlsVersion": "1.2",
          "http20Enabled": true,
          "cors": {
            "allowedOrigins": [
              "https://portal.azure.com",
              "[format('https://{0}', reference(resourceId('Microsoft.Web/staticSites', parameters('staticWebAppName')), '2021-03-01').defaultHostname)]"
            ],
            "supportCredentials": false
          }
        },
        "httpsOnly": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', parameters('appInsightsName'))]",
        "[resourceId('Microsoft.Web/serverfarms', 'EastUSPlan')]",
        "[resourceId('Microsoft.Web/staticSites', parameters('staticWebAppName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/staticSites",
      "apiVersion": "2021-03-01",
      "name": "[parameters('staticWebAppName')]",
      "location": "East US 2",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "Free",
        "tier": "Free"
      },
      "properties": {
        "repositoryUrl": "https://github.com/vedprakash-m/carpool",
        "branch": "main",
        "buildProperties": {
          "appLocation": "/frontend",
          "apiLocation": "",
          "outputLocation": "out"
        }
      }
    }
  ],
  "outputs": {
    "functionAppName": {
      "type": "string",
      "value": "[parameters('functionAppName')]"
    },
    "functionAppDefaultHostName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2021-03-01').defaultHostName]"
    },
    "staticWebAppName": {
      "type": "string",
      "value": "[parameters('staticWebAppName')]"
    },
    "staticWebAppDefaultHostName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Web/staticSites', parameters('staticWebAppName')), '2021-03-01').defaultHostname]"
    },
    "storageAccountName": {
      "type": "string",
      "value": "[parameters('storageAccountName')]"
    },
    "appInsightsName": {
      "type": "string",
      "value": "[parameters('appInsightsName')]"
    },
    "keyVaultName": {
      "type": "string",
      "value": "[parameters('keyVaultName')]"
    },
    "cosmosDbAccountName": {
      "type": "string",
      "value": "[parameters('cosmosDbAccountName')]"
    },
    "cosmosDbEndpoint": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('databaseResourceGroup')), 'Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName')), '2021-10-15').documentEndpoint]"
    }
  }
}